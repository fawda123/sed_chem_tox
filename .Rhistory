# cluster with euclidean dissim, ward grouping
dend <- dat_frm %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'average')
ngrps <- 5
grps <- cutree(dend, k = ngrps)
grps[grps == 3] <- 5
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[2] <- cols[1]
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", 0.4) %>%
color_branches(k = ngrps, col = cols) %>%
color_labels(k = ngrps, col = cols)
# circlize_dendrogram(p1)
plot(p1)
# cluster with euclidean dissim, ward grouping
dend <- dat_frm %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'average')
ngrps <- 5
grps <- cutree(dend, k = ngrps)
grps[grps == 3] <- 5
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- cols[5]
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", 0.4) %>%
color_branches(k = ngrps, col = cols) %>%
color_labels(k = ngrps, col = cols)
# circlize_dendrogram(p1)
plot(p1)
cols
grps
cols
# cluster with euclidean dissim, ward grouping
dend <- dat_frm %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'average')
ngrps <- 5
grps <- cutree(dend, k = ngrps)
grps[grps == 3] <- 5
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- cols[5]
cols <- cols[c(1, 3, 2, 4, 5)]
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", 0.4) %>%
color_branches(k = ngrps, col = cols) %>%
color_labels(k = ngrps, col = cols)
# circlize_dendrogram(p1)
plot(p1)
table(grps)
ppp <- PCA(dat_frm, scale.unit = F, graph = F)
dimdesc(ppp, axes = c(1:3))
mythm <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank(),
plot.margin = margin(0, 2, 0, 2, "pt")
)
p1 <- ggord(ppp, grp_in = as.character(grps), vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
dim(locs)
?decostand
library(tidyverse)
library(readxl)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx')
dim(dat)
head(dat)
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station Identity`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
)
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
)
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
)
head(dat)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate(
fine = as.numeric(fine),
amph_surv = as.numeric(amph_surv),
embr_surv = as.numeric(embr_surv)
)
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
)
head(dat)
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_if(is.character, as.numeric)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_if(. %in% '?', NA)
?mutate_if
read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_if(function(x) x %in% '?', NA)
read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){
x[x %in% '?'] <- NA
return x}
)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){
x[x %in% '?'] <- NA; return(x)}
)
muta
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){
x[x %in% '?'] <- NA; return(x)}
)
dat
adt$fine
dat$fine
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){ x[x %in% '?'] <- NA; return(x)} ) %>%
mutate_if(is.character, as.numeric)
head(dat)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){ x[x %in% '?'] <- NA; return(x)} ) %>%
mutate_if(is.character, as.numeric)
# add station lat/lon
locs <- read.csv('ignore/AllBightStationLocations.csv', stringsAsFactors = F) %>%
filter(Bight %in% 2008) %>%
rename(station = StationID) %>%
select(station, Latitude, Longitude)
dat <- dat %>%
left_join(locs, by = 'station') %>%
rename(
lat = Latitude,
lon = Longitude
)
library(tidyverse)
library(readxl)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){ x[x %in% '?'] <- NA; return(x)} ) %>%
mutate_if(is.character, as.numeric)
# add station lat/lon
locs <- read.csv('ignore/AllBightStationLocations.csv', stringsAsFactors = F) %>%
filter(Bight %in% 2008) %>%
rename(station = StationID) %>%
select(station, Latitude, Longitude) %>%
mutate(station = as.numeric(station))
dat <- dat %>%
left_join(locs, by = 'station') %>%
rename(
lat = Latitude,
lon = Longitude
)
save(dat, file = 'data/dat.RData', compress = 'xz')
head(dat)
locs <- dat %>%
select(station, lon, lat)
evvr <- dat %>%
select(station, depth, toc, tn, fine, amph_surv, embr_surv)
str(locs)
str(evvr)
dim(dat)
dim(dat)
names(dat)
mets <- dat %>%
select(station, -depth, -toc, -tn, -fine, -amph_surv, -embr_surv, -lat, -lon)
library(GGally)
ggpairs(mets[, -1])
head(mets)
data(dat)
mets <- dat %>%
select(station, -depth, -toc, -tn, -fine, -amph_surv, -embr_surv, -lat, -lon)
dim(mets)
data(dat)
mets <- dat %>%
select(station, -depth, -toc, -tn, -fine, -amph_surv, -embr_surv, -lat, -lon)
dim(mets)
library(tidyverse)
library(readxl)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx') %>%
.[-1, ] %>%
select(-`Amphipod survival (n =20)`, -`X__2`) %>%
rename(
station = `Station ID`,
depth = `Depth\r\n(m)`,
toc = `%TOC`,
tn = `%TN`,
fine = `%Fine`,
amph_surv = X__1,
embr_surv = `%M.Emb.Surv.`
) %>%
mutate_all(function(x){ x[x %in% '?'] <- NA; return(x)} ) %>%
mutate_if(is.character, as.numeric)
# add station lat/lon
locs <- read.csv('ignore/AllBightStationLocations.csv', stringsAsFactors = F) %>%
filter(Bight %in% 2008) %>%
rename(station = StationID) %>%
select(station, Latitude, Longitude) %>%
mutate(station = as.numeric(station))
dat <- dat %>%
left_join(locs, by = 'station') %>%
rename(
lat = Latitude,
lon = Longitude
)
save(dat, file = 'data/dat.RData', compress = 'xz')
dim(dat)
data(dat)
locs <- dat %>%
select(station, lon, lat)
evvr <- dat %>%
select(station, toc, tn, fine, amph_surv, embr_surv)
mets <- dat %>%
select(-depth, -toc, -tn, -fine, -amph_surv, -embr_surv, -lat, -lon)
dim(Mets)
dim(mets)
head(mets)
names(mets)
ggpairs(mets[, -1])
warnings()
# Chunk 1
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, fig.path = 'figs/', dev.args = list(bg = 'transparent'))
# Chunk 2: setup
library(tidyverse)
library(GGally)
library(vegan)
library(ggdendro)
library(dendextend)
library(FactoMineR)
library(ggord)
library(mapview)
library(sf)
data(dat)
locs <- dat %>%
select(station, lon, lat)
evvr <- dat %>%
select(station, toc, tn, fine, amph_surv, embr_surv)
mets <- dat %>%
select(-depth, -toc, -tn, -fine, -amph_surv, -embr_surv, -lat, -lon)
# Chunk 3: pairplot
ggpairs(evvr[, -1])
# Chunk 4: pairplot_cln
dat_frm <- evvr %>%
data.frame %>%
filter(amph_surv > 30) %>%
# filter(tn < 0.4 & toc < 4 & amph_surv > 30)%>%
mutate(
tn = log10(tn),
toc = log10(toc),
fine = ifelse(is.na(fine), mean(fine, na.rm = TRUE), fine),
embr_surv = ifelse(is.na(embr_surv), mean(embr_surv, na.rm = TRUE), embr_surv)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
ggpairs(dat_frm)
# Chunk 5: dendro
# cluster with euclidean dissim, ward grouping
dend <- dat_frm %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'average')
ngrps <- 5
grps <- cutree(dend, k = ngrps)
grps[grps == 3] <- 5
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- cols[5]
colsd <- cols[c(1, 3, 2, 4, 5)]
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", 0.4) %>%
color_branches(k = ngrps, col = colsd) %>%
color_labels(k = ngrps, col = colsd)
# circlize_dendrogram(p1)
plot(p1)
# Chunk 6: pairplot_grp
cols <- cols[1:4]
toplo <- dat_frm %>%
mutate(Groups = as.character(grps))
p <- ggpairs(toplo, mapping = ggplot2::aes(fill = Groups, colour = Groups))
for (row in seq_len(p$nrow))
for (col in seq_len(p$ncol))
p[row, col] <- p[row, col] + scale_colour_manual(values = cols) + scale_fill_manual(values = cols)
p
# Chunk 7: ordiplot
cols <- cols[1:4]
ppp <- PCA(dat_frm, scale.unit = F, graph = F)
mythm <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank(),
plot.margin = margin(0, 2, 0, 2, "pt")
)
p1 <- ggord(ppp, grp_in = as.character(grps), vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
dimdesc(ppp, axes = c(1:2))
pca_mets <- mets[, -1] %>%
decostand(method = 'standardize')
ppp <- PCA(pca_mets, scale.unit = F, graph = F)
p1 <- ggord(ppp, vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
View(mets)
colSums(mets)
pca_mets <- mets[, -1] %>%
mutate_if(is.na, mean)
mets[, -1] %>%
mutate_if(is.na, function(x) mean(x, na.rm = T))
mets[, -1] %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), mean(., na.rm = T), .)))
pca_mets <- mets[, -1] %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), mean(., na.rm = T), .)))
pca_mets[155,]
mets[155,]
mets[154,]
mets[156,]
mets[155,]
which(is.na(mets$Al))
mets[147,]
pca_mets[147,]
mean(mets$Al, na.rm = T)
pca_mets <- mets[, -1] %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), mean(., na.rm = T), .))) %>%
decostand(method = 'standardize')
ppp <- PCA(pca_mets, scale.unit = F, graph = F)
p1 <- ggord(ppp, vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
p1 <- ggord(ppp, vec_ext = 5, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
p1 <- ggord(ppp, vec_ext = 8, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
p1 <- ggord(ppp, vec_ext = 10, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
plot(Al ~ Hg, mets)
pca_mets <- mets[, -1] %>%
filter(Hg < 5) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), mean(., na.rm = T), .))) %>%
decostand(method = 'standardize')
ppp <- PCA(pca_mets, scale.unit = F, graph = F)
p1 <- ggord(ppp, vec_ext = 10, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
plot(Cd ~ Ni, mets)
max(mets$Ni)
pca_mets <- mets[, -1] %>%
filter(Hg < 5 & Cd < Ni < 47) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), mean(., na.rm = T), .))) %>%
decostand(method = 'standardize')
ppp <- PCA(pca_mets, scale.unit = F, graph = F)
p1 <- ggord(ppp, vec_ext = 10, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
pca_mets <- mets[, -1] %>%
filter(Hg < 5 & Ni < 47) %>%
mutate_if(is.numeric, funs(ifelse(is.na(.), mean(., na.rm = T), .))) %>%
decostand(method = 'standardize')
ppp <- PCA(pca_mets, scale.unit = F, graph = F)
p1 <- ggord(ppp, vec_ext = 10, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols) +
mythm
p1
