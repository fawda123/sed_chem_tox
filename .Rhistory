jpeg(here('figs', 'pcanuts.jpg'), height = 4.5, width = 11, units = 'in', res = 500, family = 'serif')
# {p1 + p2 + p3 + plot_layout(ncol = 1)} -
#     pleg + plot_layout(ncol = 2, widths = c(1, 0.2))
wrap_elements(pleg) + {p1 + p2 + p3 + plot_layout(ncol = 3)} +
plot_layout(ncol = 1, heights = c(0.2, 1))
dev.off()
# Chunk 7: pcanuts
knitr::include_graphics(here('figs', 'pcanuts.jpg'))
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
table(grps)
# metals clustering
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 2, 4, 3)]
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
# adonis(dat_frm_mets ~ grps, method = 'eu')
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", NA) %>%
color_branches(k = ngrps, col = cols) #%>%
# color_labels(k = ngrps, col = colsd)
# jpeg(here('figs', 'siteclstsmet.jpg'), height = 5.5, width = 7, units = 'in', res = 500, family = 'serif')
par(mar = c(2.5, 4.5, 0.25, 0))
plot(p1, ylab = 'Dissimilarity')
legend('topright', legend = c('1', '2', '3', '4'), fill = colsd, title = 'Groups', bty = 'n')
title(xlab = 'Monitoring stations (153)', line = 0)
# dev.off()
# metals clustering
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 3, 4, 2)]
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
# adonis(dat_frm_mets ~ grps, method = 'eu')
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", NA) %>%
color_branches(k = ngrps, col = colsd) #%>%
# color_labels(k = ngrps, col = colsd)
# jpeg(here('figs', 'siteclstsmet.jpg'), height = 5.5, width = 7, units = 'in', res = 500, family = 'serif')
par(mar = c(2.5, 4.5, 0.25, 0))
plot(p1, ylab = 'Dissimilarity')
legend('topright', legend = c('1', '2', '3', '4'), fill = colsd, title = 'Groups', bty = 'n')
title(xlab = 'Monitoring stations (153)', line = 0)
# dev.off()
# metals clustering
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 3, 4, 2)]
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
# adonis(dat_frm_mets ~ grps, method = 'eu')
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", NA) %>%
color_branches(k = ngrps, col = cols[c(1, 3, 2, 4)]) #%>%
# color_labels(k = ngrps, col = colsd)
jpeg(here('figs', 'siteclstsmet.jpg'), height = 5.5, width = 7, units = 'in', res = 500, family = 'serif')
par(mar = c(2.5, 4.5, 0.25, 0))
plot(p1, ylab = 'Dissimilarity')
legend('topright', legend = c('1', '2', '3', '4'), fill = colsd, title = 'Groups', bty = 'n')
title(xlab = 'Monitoring stations (153)', line = 0)
dev.off()
# metals clustering
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 3, 4, 2)]
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
# adonis(dat_frm_mets ~ grps, method = 'eu')
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", NA) %>%
color_branches(k = ngrps, col = cols[c(1, 3, 2, 4)]) #%>%
# color_labels(k = ngrps, col = colsd)
# jpeg(here('figs', 'siteclstsmet.jpg'), height = 5.5, width = 7, units = 'in', res = 500, family = 'serif')C
par(mar = c(2.5, 4.5, 0.25, 0))
plot(p1, ylab = 'Dissimilarity')
legend('topright', legend = c('1', '2', '3', '4'), fill = colsd, title = 'Groups', bty = 'n')
title(xlab = 'Monitoring stations (153)', line = 0)
# dev.off()
tomod <- dat_frm_mets %>%
mutate(grps = factor(grps)) %>%
rename(
amph_surv = `Amph. surv.`,
embr_surv = `Embr. surv.`
)
set.seed(123)
tmp <- randomForest(grps ~ .,
data = tomod,
importance = TRUE,
ntree = 1000, na.action = na.omit)
tmp$importance
# Chunk 1
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, fig.path = 'figs/', dev.args = list(bg = 'transparent'))
library(tidyverse)
library(GGally)
library(vegan)
library(ggdendro)
library(dendextend)
library(FactoMineR)
library(ggord)
library(mapview)
library(sf)
library(randomForest)
library(gridExtra)
library(here)
library(patchwork)
# get legend from an existing ggplot object
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
load(file = here('data', 'dat.RData'))
# rename toxicity columns
dat <- dat %>%
rename(
`Embr. surv.` = embr_surv,
`Amph. surv.` = amph_surv,
`% TN` = tn,
`% TOC` = toc,
`% Fines` = fine
)
# nutrients formatted data
# outlier removed, some variables transformed, values standardized
dat_frm <- dat %>%
select(station, depth, `% TOC`, `% TN`, `% Fines`, `Amph. surv.`, `Embr. surv.`) %>%
select(-depth) %>%
filter(`Amph. surv.` > 30) %>%
# filter(`% TN` < 0.4 & `% TOC` < 4 & `Amph. surv.` > 30)%>%
mutate(
`% TN` = log10(`% TN`),
`% TOC` = log10(`% TOC`),
`% Fines` = ifelse(is.na(`% Fines`), mean(`% Fines`, na.rm = TRUE), `% Fines`),
`Embr. surv.` = ifelse(is.na(`Embr. surv.`), mean(`Embr. surv.`, na.rm = TRUE), `Embr. surv.`)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
# metals formatted data
# outliers removed, values standardized
dat_frm_mets <- dat %>%
select(-`% TOC`, -`% Fines`, -`% TN`, -depth, -lat, -lon) %>%
filter(`Amph. surv.` > 30) %>%
filter(Hg < 5) %>%
filter(Cr < 100) %>%
filter(Ba < 600) %>%
filter(Sb < 1.3) %>%
filter(Ag < 2) %>%
mutate(
`Embr. surv.` = ifelse(is.na(`Embr. surv.`), median(`Embr. surv.`, na.rm = TRUE), `Embr. surv.`),
Al = ifelse(is.na(Al), median(Al, na.rm = TRUE), Al),
Sb = ifelse(is.na(Sb), median(Sb, na.rm = TRUE), Sb),
As = ifelse(is.na(As), median(As, na.rm = TRUE), As)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
# ggplot theme1
mythm1 <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank(),
plot.margin = ggplot2::margin(0, 2, 0, 2, "pt")
)
# ggplot theme2
mythm2 <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank()
)
?hclust
citation('vegan')
?adonis
# Chunk 1
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, fig.path = 'figs/', dev.args = list(bg = 'transparent'))
library(tidyverse)
library(GGally)
library(vegan)
library(ggdendro)
library(dendextend)
library(FactoMineR)
library(ggord)
library(mapview)
library(sf)
library(randomForest)
library(gridExtra)
library(here)
library(patchwork)
# get legend from an existing ggplot object
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
load(file = here('data', 'dat.RData'))
# rename toxicity columns
dat <- dat %>%
rename(
`Embr. surv.` = embr_surv,
`Amph. surv.` = amph_surv,
`% TN` = tn,
`% TOC` = toc,
`% Fines` = fine
)
# nutrients formatted data
# outlier removed, some variables transformed, values standardized
dat_frm <- dat %>%
select(station, depth, `% TOC`, `% TN`, `% Fines`, `Amph. surv.`, `Embr. surv.`) %>%
select(-depth) %>%
filter(`Amph. surv.` > 30) %>%
# filter(`% TN` < 0.4 & `% TOC` < 4 & `Amph. surv.` > 30)%>%
mutate(
`% TN` = log10(`% TN`),
`% TOC` = log10(`% TOC`),
`% Fines` = ifelse(is.na(`% Fines`), mean(`% Fines`, na.rm = TRUE), `% Fines`),
`Embr. surv.` = ifelse(is.na(`Embr. surv.`), mean(`Embr. surv.`, na.rm = TRUE), `Embr. surv.`)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
# metals formatted data
# outliers removed, values standardized
dat_frm_mets <- dat %>%
select(-`% TOC`, -`% Fines`, -`% TN`, -depth, -lat, -lon) %>%
filter(`Amph. surv.` > 30) %>%
filter(Hg < 5) %>%
filter(Cr < 100) %>%
filter(Ba < 600) %>%
filter(Sb < 1.3) %>%
filter(Ag < 2) %>%
mutate(
`Embr. surv.` = ifelse(is.na(`Embr. surv.`), median(`Embr. surv.`, na.rm = TRUE), `Embr. surv.`),
Al = ifelse(is.na(Al), median(Al, na.rm = TRUE), Al),
Sb = ifelse(is.na(Sb), median(Sb, na.rm = TRUE), Sb),
As = ifelse(is.na(As), median(As, na.rm = TRUE), As)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
# ggplot theme1
mythm1 <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank(),
plot.margin = ggplot2::margin(0, 2, 0, 2, "pt")
)
# ggplot theme2
mythm2 <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank()
)
adonis(dat_frm ~ grps, method = 'eu', permutations = 1000)
set.seed(1234)
# cluster with euclidean dissim, ward grouping
dend <- dat_frm %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
ngrps <- 4
grps <- cutree(dend, k = ngrps)
adonis(dat_frm ~ grps, method = 'eu', permutations = 1000)
table(grps)
table(grps)/ sum(table(grps))
# Chunk 1
library(knitr)
opts_chunk$set(warning = FALSE, message = FALSE, fig.path = 'figs/', dev.args = list(bg = 'transparent'))
library(tidyverse)
library(GGally)
library(vegan)
library(ggdendro)
library(dendextend)
library(FactoMineR)
library(ggord)
library(mapview)
library(sf)
library(randomForest)
library(gridExtra)
library(here)
library(patchwork)
# get legend from an existing ggplot object
g_legend <- function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
load(file = here('data', 'dat.RData'))
# rename toxicity columns
dat <- dat %>%
rename(
`Embr. surv.` = embr_surv,
`Amph. surv.` = amph_surv,
`% TN` = tn,
`% TOC` = toc,
`% Fines` = fine
)
# nutrients formatted data
# outlier removed, some variables transformed, values standardized
dat_frm <- dat %>%
select(station, depth, `% TOC`, `% TN`, `% Fines`, `Amph. surv.`, `Embr. surv.`) %>%
select(-depth) %>%
filter(`Amph. surv.` > 30) %>%
# filter(`% TN` < 0.4 & `% TOC` < 4 & `Amph. surv.` > 30)%>%
mutate(
`% TN` = log10(`% TN`),
`% TOC` = log10(`% TOC`),
`% Fines` = ifelse(is.na(`% Fines`), mean(`% Fines`, na.rm = TRUE), `% Fines`),
`Embr. surv.` = ifelse(is.na(`Embr. surv.`), mean(`Embr. surv.`, na.rm = TRUE), `Embr. surv.`)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
# metals formatted data
# outliers removed, values standardized
dat_frm_mets <- dat %>%
select(-`% TOC`, -`% Fines`, -`% TN`, -depth, -lat, -lon) %>%
filter(`Amph. surv.` > 30) %>%
filter(Hg < 5) %>%
filter(Cr < 100) %>%
filter(Ba < 600) %>%
filter(Sb < 1.3) %>%
filter(Ag < 2) %>%
mutate(
`Embr. surv.` = ifelse(is.na(`Embr. surv.`), median(`Embr. surv.`, na.rm = TRUE), `Embr. surv.`),
Al = ifelse(is.na(Al), median(Al, na.rm = TRUE), Al),
Sb = ifelse(is.na(Sb), median(Sb, na.rm = TRUE), Sb),
As = ifelse(is.na(As), median(As, na.rm = TRUE), As)
) %>%
column_to_rownames('station') %>%
decostand(method = 'standardize')
# ggplot theme1
mythm1 <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank(),
plot.margin = ggplot2::margin(0, 2, 0, 2, "pt")
)
# ggplot theme2
mythm2 <- theme_bw(base_family = 'serif') +
theme(
legend.position = 'none',
strip.background = element_blank()
)
# Chunk 2
set.seed(1234)
# cluster with euclidean dissim, ward grouping
dend <- dat_frm %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
ngrps <- 4
grps <- cutree(dend, k = ngrps)
adonis(dat_frm ~ grps, method = 'eu', permutations = 1000)
# color vector for groups
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 3, 4, 2)]
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", NA) %>%
color_branches(k = ngrps, col = cols) #%>%
# color_labels(k = ngrps, col = colsd)
jpeg(here('figs', 'siteclsts.jpg'), height = 5.5, width = 7, units = 'in', res = 500, family = 'serif')
par(mar = c(2.5, 4.5, 0.25, 0))
plot(p1, ylab = 'Dissimilarity')
legend('topright', legend = c('1', '2', '3', '4'), fill = colsd, title = 'Groups', bty = 'n')
title(xlab = 'Monitoring stations (153)', line = 0)
dev.off()
# Chunk 3: clstmap
knitr::include_graphics(here('figs', 'siteclsts.jpg'))
# Chunk 4
cols <- cols[c(1, 3, 4, 2)]
toplo <- dat_frm %>%
mutate(Groups = as.character(grps))
p <- ggpairs(toplo, mapping = ggplot2::aes(fill = Groups, colour = Groups))
for (row in seq_len(p$nrow))
for (col in seq_len(p$ncol))
p[row, col] <- p[row, col] + scale_colour_manual(values = cols) + scale_fill_manual(values = cols)
# circlize_dendrogram(p1)
jpeg(here('figs', 'prplts.jpg'), height = 7, width = 7, units = 'in', res = 500, family = 'serif')
p
dev.off()
# Chunk 5: prplts
knitr::include_graphics(here('figs', 'prplts.jpg'))
# Chunk 6
ppp <- PCA(dat_frm, scale.unit = F, graph = F)
p1 <- ggord(ppp, grp_in = as.character(grps), vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols, repel = T, coord_fix = F) +
mythm2 +
ggtitle('(a)')
p2 <- ggord(ppp, grp_in = as.character(grps), axes = c('2', '3'), vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols, repel = T, coord_fix = F) +
mythm2 +
ggtitle('(b)')
p3 <- ggord(ppp, grp_in = as.character(grps), axes = c('1', '3'), vec_ext = 3, alpha = 0.8, size = 2, txt = 4, arrow = 0.2, cols = cols, repel = T, coord_fix = F) +
theme(legend.position = 'top')  +
ggtitle('(c)')
pleg <- g_legend(p3)
p3 <- p3 + mythm2
jpeg(here('figs', 'pcanuts.jpg'), height = 4.7, width = 11, units = 'in', res = 500, family = 'serif')
# {p1 + p2 + p3 + plot_layout(ncol = 1)} -
#     pleg + plot_layout(ncol = 2, widths = c(1, 0.2))
wrap_elements(pleg) + {p1 + p2 + p3 + plot_layout(ncol = 3)} +
plot_layout(ncol = 1, heights = c(0.2, 1))
dev.off()
# Chunk 7: pcanuts
knitr::include_graphics(here('figs', 'pcanuts.jpg'))
# metals clustering
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 3, 4, 2)]
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
# adonis(dat_frm_mets ~ grps, method = 'eu')
p1 <- dend %>%
as.dendrogram %>%
set("labels_cex", NA) %>%
color_branches(k = ngrps, col = cols[c(1, 3, 2, 4)]) #%>%
# color_labels(k = ngrps, col = colsd)
jpeg(here('figs', 'siteclstsmet.jpg'), height = 5.5, width = 7, units = 'in', res = 500, family = 'serif')
par(mar = c(2.5, 4.5, 0.25, 0))
plot(p1, ylab = 'Dissimilarity')
legend('topright', legend = c('1', '2', '3', '4'), fill = colsd, title = 'Groups', bty = 'n')
title(xlab = 'Monitoring stations (153)', line = 0)
dev.off()
table(grps)
adonis(dat_frm_mets ~ grps, method = 'eu')
# metals clustering
set.seed(1234)
ngrps <- 4
# metals cluster colors
cols <- mapviewGetOption("vector.palette")(ngrps)
cols[4] <- 'orange'
colsd <- cols[c(1, 3, 4, 2)]
# cluster with euclidean dissim, ward grouping
dend <- dat_frm_mets %>%
vegdist(method = 'euclidean') %>%
hclust(method = 'ward.D2')
# grouping vector
grps <- cutree(dend, k = ngrps)
adonis(dat_frm_mets ~ grps, method = 'eu', permutations = 1000)
dim(dat_frm_mets)
citation('randomForest')
library(mapview)
library(sf)
tmp <- st_read('data/sitegrps.shp')
mapview(tmp)
head(tmp)
dim(tmp)
load(file = 'data/dat.RData')
dim(dat)
head(at)
head(dat)
library(tidyverse)
library(readxl)
# initial data processing
dat <- read_excel('ignore/Sed_chem_tox - expanded.xlsx')
dim(dat)
View(dat)
dim(iris)
head(iris)
table(iris$Species)
library(gganimate)
install.packages('gganimate')
library(tidyverse)
library(readxl)
library(here)
# initial data processing
dat <- read_excel(here('data-raw/Sed_chem_tox - expanded.xlsx'))
